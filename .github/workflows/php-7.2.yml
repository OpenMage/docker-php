name: "7.2"
on:
  push:
    branches:
    - master
    paths:
    - 'src/7.2/**'
    - '.github/workflows/php-7.2.yml'
  schedule:
  - cron:  '30 1 1,15 * *'

jobs:
  
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [7.2]
        patchVersion: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]
    steps:
    - uses: actions/checkout@v1
    
    - name: Build php image
      run: docker build --target php -t openmage/php:${{ matrix.version }}.${{ matrix.patchVersion }} -f src/${{ matrix.version }}/src/Dockerfile --build-arg PHP_VERSION=${{ matrix.version }}.${{ matrix.patchVersion }} src/${{ matrix.version }}/src/
    
    - name: Build toolbox image
      run: docker build --target toolbox -t openmage/php:${{ matrix.version }}.${{ matrix.patchVersion }}-toolbox -f src/${{ matrix.version }}/src/Dockerfile --build-arg PHP_VERSION=${{ matrix.version }}.${{ matrix.patchVersion }} src/${{ matrix.version }}/src/
    
    - uses: azure/docker-login@v1
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: publish php image to dockerhub
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: docker push openmage/php:${{ matrix.version }}.${{ matrix.patchVersion }}
    - name: publish toolbox image to dockerhub
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: docker push openmage/php:${{ matrix.version }}.${{ matrix.patchVersion }}-toolbox

#  test:
#    name: Unit Tests
#    runs-on: ubuntu-latest
#    needs: ['build']
#    strategy:
#      matrix:
#        distribution: [stretch, buster]
#    steps:
#    - uses: actions/checkout@v1
#    - name: Pull Image artifact
#      uses: actions/download-artifact@master
#      with:
#        name: action-image
#    - name: Load image into docker context
#      run: docker load -i action-image/build-${{ matrix.distribution }}.tar
#    - name: Run Structure tests
#      uses: brpaz/structure-tests-action@master
#      with:
#        configFile: .container-structure-test.yaml
#        image: debian-${{ matrix.distribution }}:${{github.sha}}
#
#  release:
#    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
#    name: Release
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        version: [7.4]
#        patchVersion: [0,1,2,3]
#    needs: build
#    steps:
#      - uses: azure/docker-login@v1
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#      - uses: actions/download-artifact@master
#        name: Pull Image artifact
#        with:
#          name: action-image
#      - name: Load php image into docker context
#        run: docker load -i action-image/${{ matrix.version }}.${{ matrix.patchVersion }}-php.tar
#      - name: Load toolbox image into docker context
#        run: docker load -i action-image/${{ matrix.version }}.${{ matrix.patchVersion }}-toolbox.tar
#      - name: publish php image to dockerhub
#        run: docker push openmage/php:${{ matrix.version }}.${{ matrix.patchVersion }}
#      - name: publish toolbox image to dockerhub
#        run: docker push openmage/php:${{ matrix.version }}.${{ matrix.patchVersion }}-toolbox